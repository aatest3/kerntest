name: checks
on:
  pull_request_target:
    types: [opened, synchronize, reopened, labeled]
    paths: [pocs/linux/kernelctf/**]
  workflow_dispatch:
    inputs:
      prNumber:
        description: 'PR number'
        type: number
      shaHash:
        description: 'SHA hash'
permissions: {}
env:
  PR_REF: ${{ github.event_name == 'workflow_dispatch' && (github.event.inputs.shaHash || format('refs/pull/{0}/merge', github.event.inputs.prNumber)) || github.event.pull_request.head.sha }}
jobs:
  structure_check:
    # if labeling triggered the job then only run in case of the "recheck" label
    if: github.event.action != 'labeled' || github.event.label.name == 'recheck'
    runs-on: ubuntu-latest
    permissions: {}
    outputs:
      targets: ${{ steps.check_submission.outputs.targets }}
      submission_dir: ${{ steps.check_submission.outputs.submission_dir }}
      exploits_info: ${{ steps.check_submission.outputs.exploits_info }}
      artifact_backup_dir: ${{ steps.check_submission.outputs.artifact_backup_dir }}
    steps:
      - run: pip install -U jsonschema

      - name: Checkout repo content
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Checkout PR content
        uses: actions/checkout@v4
        with:
          path: pr
          ref: ${{ env.PR_REF }}
          fetch-depth: 0

      - id: check_submission
        name: Check submission
        working-directory: pr
        run: |
          echo "::stop-commands::$(uuidgen)"
          ../kernelctf/check-submission.py ${{ github.event.pull_request.base.sha }}
          
  backup_artifacts:
    runs-on: ubuntu-latest
    needs: [structure_check]
    if: always() && needs.structure_check.result == 'success'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{secrets.KERNELCTF_GCS_SA_KEY}}'

      - name: Upload artifacts to GCS
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: ./artifacts
          destination: kernelctf-build/artifacts/${{ needs.structure_check.outputs.artifact_backup_dir }}_${{ github.run_id }}
          parent: false
          predefinedAcl: publicRead
          process_gcloudignore: false # removes warnings that .gcloudignore file does not exist
